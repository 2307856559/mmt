<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lemon.system.mapper.UserMapper">
	<resultMap type="lemon.system.bean.User" id="user">
		<id property="id" column="id" />
		<result property="user_id" column="user_id" />
		<result property="password" column="password" />
	</resultMap>
	<select id="getUserId" parameterType="string" resultType="int">
		select a.user_id
			from system_user a
			where a.user_name=#{user_name}
	</select>
	<select id="getRolesByUserId" parameterType="int" resultType="lemon.system.bean.UserRole">
		select b.id,a.user_id,c.dept_code, c.dept_name,d.role_id,d.role_name,d.reload
			from system_user a,system_user_role b,system_dept c ,system_role d
			where a.user_id=b.user_id
				and c.dept_code=b.dept_id
				and d.role_id=b.role_id
				and a.user_id=#{userId}
				and a.`status`='1'
	</select>
	<select id="getRolesByLogin" parameterType="int" resultType="lemon.system.bean.User">
		select a.user_id,a.user_name,a.sfzh,a.sjhm,a.lastlogintime,a.islock,
			a.bz,a.lastloginip,a.`status`,a.xm, c.dept_code, c.dept_name,d.role_id,d.role_name,d.reload
			from system_user a,system_user_role b,system_dept c ,system_role d
			where a.user_id=b.user_id
				and c.dept_code=b.dept_id
				and d.role_id=b.role_id
				and a.user_id=#{userId}
				and a.`status`='1'
	</select>
	<select id="getUserByIdAndRole" resultType="lemon.system.bean.User" parameterType="lemon.system.bean.User">
		select a.user_id,a.user_name,a.sfzh,a.sjhm,a.lastlogintime,a.islock,
			a.bz,a.lastloginip,a.`status`,a.xm, c.dept_code, c.dept_name,d.role_id,d.role_name,d.reload
		from system_user a,system_user_role b,system_dept c ,system_role d
		where a.user_id=b.user_id
			and c.dept_code=b.dept_id
			and d.role_id=b.role_id
			and a.user_id=#{user_id}
			and b.role_id=#{role_id}
			and a.`status`='1'
	</select>
	<select id="checkLogin" resultType="lemon.system.bean.User" parameterType="lemon.system.bean.User">
		select user_id,password,user_name,sfzh,sjhm,lastlogintime,islock,bz,lastloginip,`status`,xm
			from system_user
		where user_name=#{user_name}
			and password=#{password}
			and `status`='1'
			and islock='0'
	</select>
	<insert id="addUser" parameterType="lemon.system.bean.User" useGeneratedKeys="true" keyProperty="user_id">
		insert into system_user(password,user_name,sfzh,sjhm,bz,xm,islock)
			select #{password},#{user_name},#{sfzh},#{sjhm},#{bz},#{xm},#{islock}
	</insert>
	 <update id="yhzlbg" parameterType="lemon.system.bean.User">
		update system_user a
			set a.sfzh=#{sfzh},
				a.sjhm=#{sjhm},
				a.bz=#{bz},
			<if test="password!=null and password!=''">
				a.password=#{password},
			</if>
				a.islock=#{islock},
				a.xm=#{xm}
			where a.user_id=#{user_id}
	</update>
	<update id="grsz" parameterType="lemon.system.bean.User">
		update system_user a
			set a.sfzh=#{sfzh},
				a.sjhm=#{sjhm},
				a.bz=#{bz},
			<if test="password!=null and password!=''">
				a.password=#{password},
			</if>
				a.islock=#{islock},
				a.xm=#{xm}
			where a.user_id=#{user_id}
	</update>
	<update id="deleteUser" parameterType="string">
		update system_user a
			set a.`status`='0'
		where a.user_id in
		<foreach collection="array" item="users" index="index" open="(" separator="," close=")">
			#{users}
		</foreach>
	</update>
	<select id="getUserList" parameterType="string" resultType="lemon.system.bean.User">
		select a.user_id,a.user_name,a.sfzh,a.sjhm,a.lastlogintime,case islock when '1' then '锁定' else '正常' end islock,a.bz,a.lastloginip,a.xm,d.role_name,c.dept_name
       		from system_user a 
	            left join system_user_role b on a.user_id=b.user_id            
	            left join system_dept c on b.dept_id=c.dept_code            
	            left join system_role d on b.role_id=d.role_id            
			where a.`status`='1'
				and a.user_id in
			<foreach collection="list" item="users" index="index" open="(" separator="," close=")">
				#{users}
			</foreach>
			order by a.user_id
	</select>
	<select id="getUserIdList" parameterType="map" resultType="int">
		select distinct a.user_id
       		from system_user a 
       			left join system_user_role b on a.user_id=b.user_id 
			where a.`status`='1'
			<if test="dept_code!=null and dept_code!=''">
				and b.dept_id=#{dept_code}
			</if>
			<if test="xm!=null and xm!=''">
				and a.xm like #{xm}
			</if>
		order by a.user_id
		limit #{start},#{limit}
	</select>
	<select id="getUserCnt" parameterType="map" resultType="int">
		select count(distinct a.user_id)
       		from system_user a 
       			left join system_user_role b on a.user_id=b.user_id 
			where a.`status`='1'
			<if test="dept_code!=null and dept_code!=''">
				and b.dept_id=#{dept_code}
			</if>
			<if test="xm!=null and xm!=''">
				and a.xm like #{xm}
			</if>
	</select>
	<update id="updateUserByLogin" parameterType="lemon.system.bean.User">
		update system_user a
			set a.lastlogintime=now(),
				a.lastloginip=#{lastloginip}
			where a.user_id=#{user_id}
	</update>
	<insert id="addUserRole" parameterType="lemon.system.bean.UserRole"  useGeneratedKeys="true" keyProperty="id">
		insert into system_user_role(user_id,role_id,dept_id)
			select #{user_id},#{role_id},#{dept_code}
	</insert>
	<update id="editUserRole" parameterType="lemon.system.bean.UserRole">
		update system_user_role a
			set a.role_id=#{role_id},
				a.dept_id=#{dept_code}
			where a.id=#{id}
	</update>
	<delete id="delUserRole" parameterType="int">
		delete from system_user_role
			where id=#{id}
	</delete>
	<delete id="clearUserRole" parameterType="int">
		delete from system_user_role
			where user_id=#{user_id}
	</delete>
	<select id="checkUserName" parameterType="string" resultType="int">
		select count(1) cnt
			from system_user 
		where user_name=#{user_name}
	</select>
	<select id="getUser" parameterType="int" resultType="lemon.system.bean.User">
		select user_id,user_name,sfzh,sjhm,islock,bz,xm
			from system_user 
		where user_id=#{user_id}
			and `status`='1'
	</select>
	<select id="userGrid" parameterType="map" resultType="lemon.system.bean.User">
		select a.user_id,b.role_id,a.xm,c.dept_name,d.role_name
			from system_user a , system_user_role b, system_dept c,system_role d
		where a.user_id=b.user_id
			and b.dept_id=c.dept_code
			and b.role_id=d.role_id
			and a.status='1'
			and d.zt='1'
		<if test="dept_code!=null and dept_code!=''">
			and c.dept_code=#{dept_code}
		</if>
		<if test="bmjl_all!=null and bmjl_all!=''">
			and (c.dept_code=#{bmjl_all} or c.supdeptcod=#{bmjl_all})
		</if>
		<if test="user_id!=null and user_id!=0">
			and a.user_id=#{user_id}
		</if>
			and a.xm like #{xm}
		order by c.deptlevcod,a.xm
	</select>
	<select id="getZjl" resultType="lemon.system.bean.User">
		select b.user_id,b.xm,c.dept_name,d.role_name,a.role_id
       		from system_user_role a,system_user b,system_dept c,system_role d
       	where a.user_id=b.user_id
             and a.dept_id=c.dept_code             
             and a.role_id=d.role_id
             and a.role_id=2
             and b.status='1'
	</select>
	<select id="getUsers" parameterType="lemon.system.bean.User" resultType="lemon.system.bean.User">
		select b.user_id,b.xm,c.dept_name,d.role_name,a.role_id
       		from system_user_role a,system_user b,system_dept c,system_role d
       	where a.user_id=b.user_id       
             and a.dept_id=c.dept_code             
             and a.role_id=d.role_id
        <if test="role_id != null and role_id!=0">
        	and a.role_id=#{role_id}
        </if>
        <if test="dept_code != null and dept_code!='' ">
        	and c.dept_code=#{dept_code}
        </if>
             and b.status='1'
	</select>
</mapper>